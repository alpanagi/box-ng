# sudo usermod -a -G audio alex
# sudo pacman -S cadence jack2 lib32-jack2 audacity
-
  name: box-ng setup
  hosts: localhost
  tasks:
    - name: Run the equivalent of "pacman -Syu"
      become: yes
      pacman:
        update_cache: yes
        upgrade: yes

    - name: Install graphical UI (i3+sddm)
      become: yes
      package:
        name: '{{ item }}'
        state: latest
        use: pacman
      with_items:
        - dmenu
        - i3-wm
        - i3status
        - sddm

    - name: Install audio
      become: yes
      package:
        name: '{{ item }}'
        state: latest
        use: pacman
      with_items:
        - jack2
        - lib32-jack2
        - libffado
        - qjackctl

    - name: Install misc
      become: yes
      package:
        name: '{{ item }}'
        state: latest
        use: pacman
      with_items:
        - blender
        - gimp
        - kdeconnect
        - libreoffice-fresh
        - steam-manjaro

    - name: Install tools
      become: yes
      package:
        name: '{{ item }}'
        state: latest
        use: pacman
      with_items:
        - baobab
        - chromium
        - filezilla
        - firefox
        - gnu-netcat
        - konsole
        - krita
        - manjaro-printer
        - ncdu
        - neovim
        - nerd-fonts-noto-sans-mono
        - nmap
        - psensor
        - pulseaudio
        - ranger
        - ripgrep
        - snapd
        - task
        - thunderbird
        - tmux
        - tree
        - virtualbox
        - vlc
        - xf86-input-wacom
        - yay

    - name: Install development software
      become: yes
      package:
        name: '{{ item }}'
        state: latest
        use: pacman
      with_items:
        - base-devel
        - code
        - docker
        - docker-compose
        - nodejs
        - npm
        - jq
        - jdk-openjdk
        - maven
        - openjdk-doc
        - openjdk-src
        - postgresql
        - python
        - python-pip
        - rustup
        - stack
        - yarn
        - yq

    - name: Enable snap
      become: yes
      service:
        name: snapd
        enabled: yes
        state: started

    - name: Install snaps
      become: yes
      snap:
        classic: yes
        name:
          - android-studio
          - drawio
          - heroku
          - webstorm

    - name: Enable printer service and start it
      become: yes
      service:
        name: org.cups.cupsd
        enabled: yes
        state: started

    - name: Enable docker service and start it
      become: yes
      service:
        name: docker
        enabled: yes
        state: started

    - name: Add settings to .bashrc
      lineinfile:
        path: ~/.bashrc
        line: '{{ item }}'
      with_items:
        - set -o vi
        - alias vi='nvim'
        - alias vim='nvim'
        - export EDITOR=nvim
        - export LANG=en_US.UTF-8
        - export LC_ALL=en_US.UTF-8
        - export LANGUAGE=en_US.UTF-8

    - name: Create workspace directory
      file:
        path: ~/workspace
        state: directory

    - name: Create nvim config directory
      file:
        path: ~/.config/nvim/
        state: directory

    - name: Create i3 config directory
      file:
        path: ~/.config/i3/
        state: directory

    - name: Copy configuration files
      copy:
        src:  '{{ item }}'
        dest: ~/{{ item }}
      with_items:
        - .config/nvim/init.vim
        - .config/nvim/coc-settings.json
        - .config/i3/config
        - .gitconfig
        - .tmux.conf

    - name: Install vim-plug and install plugins
      shell: |
        curl -fLo ~/.local/share/nvim/site/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
        nvim --headless +PlugInstall +qall
      args:
        warn: no

    - name: Install coc extensions
      shell: |
        nvim -c 'CocInstall -sync coc-json coc-html coc-prettier coc-eslint coc-tsserver coc-markdownlint coc-java coc-rust-analyzer' +qall
